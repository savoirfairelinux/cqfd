#!/usr/bin/env bash
#
# validate the behavior of --no-rm option

set -o pipefail

. "$(dirname "$0")"/jtest.inc "$1"
cqfd="$TDIR/.cqfd/cqfd"
cqfd_docker="${CQFD_DOCKER:-docker}"

# create a temporary directory
TEST_DIR=$(mktemp -d -t cqfd-test-XXXXXX)

cd "$TEST_DIR"/ || exit 1

# 'cqfd init' with custom_img_name
custom_image_1="cqfd_test_start_custom_image_$RANDOM$RANDOM"

cat >.cqfdrc <<EOF
[project]
org="cqfd"
name="custom-image"
custom_img_name="$custom_image_1"

[build]
command="true"
EOF

# Test dockerfile
mkdir -p .cqfd/docker
echo "FROM ubuntu:24.04" >.cqfd/docker/Dockerfile

jtest_prepare "cqfd container run without no-rm option is not present in $cqfd_docker exited containers"
if "$cqfd" init && "$cqfd" run && "$cqfd_docker" ps -q -a -f ancestor="$custom_image_1" -f status=exited | wc -l | grep 0; then
	jtest_result pass
else
	jtest_result fail
fi

jtest_prepare "cqfd container run with no-rm option is present in $cqfd_docker exited containers"
if "$cqfd" --no-rm run && "$cqfd_docker" ps -q -a -f ancestor="$custom_image_1" -f status=exited | wc -l | grep 1; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# cleanup
################################################################################
"$cqfd_docker" rm "$("$cqfd_docker" ps -q -a -f ancestor="$custom_image_1" -f status=exited)"
"$cqfd_docker" rmi "$custom_image_1"
rm -rf "$TEST_DIR"
