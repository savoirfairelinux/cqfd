#!/usr/bin/env bash
#
# validate the behavior of cqfd with custom image

. "$(dirname "$0")"/jtest.inc "$1"
cqfd="$TDIR/.cqfd/cqfd"
cqfd_docker="${CQFD_DOCKER:-docker}"

# create a temporary directory
TEST_DIR=$(mktemp -d -t cqfd-test-XXXXXX)

cd "$TEST_DIR"/ || exit 1

################################################################################
# 'cqfd init' with custom image
################################################################################
custom_image_1="debian:bookworm"

# Test .cqfdrc
cat >.cqfdrc <<EOF
[project]
org="cqfd"
name="repository-image"
image="$custom_image_1"

[build]
command="cat /etc/os-release"
EOF

mkdir -p .cqfd

jtest_prepare "cqfd init works using image=$custom_image_1"
if "$cqfd" init && "$cqfd" | grep -qE 'PRETTY_NAME="Debian GNU/Linux 12 \(bookworm\)"'; then
	jtest_result pass
else
	jtest_result fail
fi

jtest_prepare "$cqfd_docker registry contains image named: $custom_image_1"
if "$cqfd_docker" inspect "$custom_image_1" &>/dev/null; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# cleanup
################################################################################
"$cqfd_docker" rmi "$custom_image_1"
rm -rf "$TEST_DIR"
