#!/usr/bin/env bash
#
# validate the behavior of project.build_context

. "$(dirname "$0")"/jtest.inc "$1"
cqfd="$TDIR/.cqfd/cqfd"

cd $TDIR/

################################################################################
# 'cqfd init' without context should fail the context
################################################################################
jtest_prepare "cqfd init without using build_context"
if "$cqfd" init &&
   "$cqfd" run "grep '^build_context=' /tmp/cqfdrc-build_context" | grep -q '^build_cont'; then
	jtest_result fail
else
	jtest_result pass
fi

################################################################################
# Now, create a special test context
################################################################################
cp -f .cqfd/docker/Dockerfile .cqfd/docker/Dockerfile.orig
cp -f .cqfd/docker/Dockerfile.build_context .cqfd/docker/Dockerfile
cp -f cqfdrc-build_context .cqfdrc

################################################################################
# 'cqfd init' with context changes the context
################################################################################
jtest_prepare "cqfd init using build_context"
if "$cqfd" init &&
   "$cqfd" run "grep '^build_context=' /tmp/cqfdrc-build_context" | grep -q '^build_cont'; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# restore initial .cqfdrc and Dockerfile
################################################################################
cp -f cqfdrc-test .cqfdrc
mv -f .cqfd/docker/Dockerfile.orig .cqfd/docker/Dockerfile
