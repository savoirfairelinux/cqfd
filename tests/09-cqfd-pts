#!/usr/bin/env bash
#
# validate the allocation of pty and the behavior of redirections

set -o pipefail

. "$(dirname "$0")/jtest.inc" "$1"
cqfd="$TDIR/.cqfd/cqfd"

cd "$TDIR/" || exit 1

cqfdrc_old=$(mktemp)
cp -f .cqfdrc "$cqfdrc_old"
sed -i -e "/\[build\]/,/^$/s/^command=.*$/command='tty || true'/" .cqfdrc
"$cqfd" init

jtest_prepare "cqfd without redirection should allocate a tty"
if tty; then
	if "$cqfd" | grep "/dev/pts/1" ; then
		jtest_result pass
	else
		jtest_result fail
	fi
else
	jtest_result skip
fi

jtest_prepare "cqfd with stdin redirected to /dev/null should not allocate a pty"
if "$cqfd" </dev/null | grep 'not a tty'; then
	jtest_result pass
else
	jtest_result fail
fi

jtest_prepare "cqfd with stderr redirected to /dev/null should not allocate a pty"
if "$cqfd" 2>/dev/null | grep 'not a tty'; then
	jtest_result pass
else
	jtest_result fail
fi

sed -i -e "/\[build\]/,/^$/s,^command=.*$,command='echo stdout \&\& echo stderr >\&2'," .cqfdrc
"$cqfd" init

jtest_prepare "cqfd with allocated pty should redirect stdout and stderr to same endpoint"
if "$cqfd" >out; then
	jtest_result pass
else
	jtest_result fail
fi
rm out

jtest_prepare "cqfd without allocated pty should redirect stdout and stderr to distinct entpoints"
if "$cqfd" >out 2>err && grep 'stdout' out && grep 'stderr' err; then
	jtest_result pass
else
	jtest_result fail
fi
rm out err

mv -f "$cqfdrc_old" .cqfdrc
